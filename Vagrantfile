# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'time'
require 'yaml'

Vagrant.configure("2") do |config|
  config.vm.box = "generic/alpine312"
  config.vm.hostname = "network-analyzer.local"
  config.vm.network "public_network"

  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "data", "/data", create: true

  config.vm.provider "virtualbox" do |vb|
    vb.name = "smash64-dev network analyzer (" + Time.now.to_i.to_s + ")"
    vb.memory = 1024
    vb.cpus = 1
    vb.gui = false
  end

  # generate smokeping targets from user config
  config.trigger.before [:reload, :up] do |trigger|
    trigger.info = "Generating user config..."
    trigger.ruby do |env, machine|
      begin
        targets = YAML.load(File.read("config/UserTargets.yml"))

        `mkdir -p data/smokeping` unless File.directory?('data/smokeping')
        File.open('data/smokeping/UserTargets', 'w+') do |file|
          file.puts("# This file is auto-generated, do not modify manually")
          file.puts("# Generated by Vagrant at #{Time.now}\n")

          parseTargets(targets, 0).each { |line| file.puts(line) }
        end
      rescue => error
        puts "\e[1;31m==> #{machine.name}: Unable to build UserTargets, using default config\e[0m"
        puts "\e[31m    #{machine.name}: #{error}\e[0m"

        `cp -f provision/smokeping/config.d/UserTargets data/smokeping/`
      end
    end
  end

  config.vm.provision :file, source: "provision", destination: "/tmp/"
  config.vm.provision :shell, path: "scripts/bootstrap.sh"

  # always make sure the data and timezone are up to date
  config.vm.provision :shell, run: "always", path: "scripts/update_data.sh"
  config.vm.provision :shell, run: "always", inline: "rm /etc/localtime && ln -s " + getTimezone + " /etc/localtime"

  # display the url to the web interface
  config.trigger.after [:reload, :resume, :up] do |trigger|
    trigger.info = "You can view the analyzer at one or more of the following addresses..."
    trigger.ruby do |env, machine|
      local_ips = `vagrant ssh #{machine.name} -c "ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\\.){3}[0-9]*).*/\\2/p'"`
      local_ips.each_line { |local_ip| puts "    #{machine.name}: http://#{local_ip.strip}/smokeping" }
    end
  end
end

def getTimezone
  # based on https://stackoverflow.com/a/46778032
  offset = ((Time.zone_offset(Time.now.zone) / 60) / 60)
  suffix = offset >= 0 ? "-#{offset.abs.to_s}" : "+#{offset.abs.to_s}"

  return '/usr/share/zoneinfo/Etc/GMT' + suffix
end

def parseTargets(hash, depth = 0)
  output = []
  hash.each { |key, value|
    if value.is_a?(Hash)
      output.concat(['', '+' * depth.next + " #{key}", ''])
      output.concat(parseTargets(value, depth.next))
    end

    if value.is_a?(String)
      output.append("#{key.downcase} = #{value}")
    end
  }

  return output
end
